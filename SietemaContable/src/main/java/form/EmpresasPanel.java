/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package form;

import logic.models.Department;
import logic.models.Empresa;
import logic.models.Municipio;
import logic.queries.InsertData;
import logic.queries.LoadStaticData;
import logic.queries.SelectData;
import logic.queries.UpdateData;

import javax.swing.*;
import java.awt.*;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.List;
import java.util.Objects;
import logic.EmpresaSelected;

/**
 * @author alexu
 */
public class EmpresasPanel extends javax.swing.JPanel {

    String user;
    boolean update;
    int empresaId;
    private int idUser;
    private EmpresaSelected empresaSelected;

    /**
     * Creates new form EmpresasPanel
     */
    public EmpresasPanel(String user, EmpresaSelected empresaSelected, int userID) {
        this.user = user;
        this.idUser = userID;
        this.empresaSelected = empresaSelected;
        initComponents();
        loadDepartments();
        loadGiros();
    }

    public EmpresasPanel(int empresaId, boolean update, int userID) {
        this.idUser = userID;
        initComponents();
        this.update = update;
        this.empresaId = empresaId;
        loadDataToEdit(empresaId);
        loadGiros();
    }

    void loadDataToEdit(int empresaId) {
        JOptionPane.showMessageDialog(this, "ID de la empresa: " + empresaId);
        jLabel1.setText("ACTUALIZAR DATOS DE LA EMPRESA");
        List<Empresa> listaEmpresa = SelectData.getCompanieById(empresaId);

        if (!listaEmpresa.isEmpty()) {
            this.idUser = listaEmpresa.get(0).getIdUsuario();
            Empresa empresa = listaEmpresa.get(0);

            txtGetNombreComercial.setText(empresa.getNombreComercial());
            txtGetNit.setText(empresa.getNit());
            txtGetDireccion.setText(empresa.getDireccion());
            jTextFieldPropietario.setText(empresa.getPropietario());

            loadDepartments();
            loadGiros();

            String giro = empresa.getGiroComercialObj().getId() + " - " + empresa.getGiroComercialObj().getGiro_comercial();
            System.out.println("Giro to select: " + giro);
            String departamento = empresa.getDepartmento().getId() + " - " + empresa.getDepartmento().getName();
            String municipio = empresa.getMunicipio().getId() + " - " + empresa.getMunicipio().getName();
            String distrito = empresa.getDistrito().getId() + " - " + empresa.getDistrito().getName();

            SwingUtilities.invokeLater(() -> {
                for (int i = 0; i < jComboBoxGiros.getItemCount(); i++) {
                    if (jComboBoxGiros.getItemAt(i).toString().equals(giro)) {
                        jComboBoxGiros.setSelectedIndex(i);
                        break;
                    }
                }

                for (int i = 0; i < jComboBoxDepartamentos.getItemCount(); i++) {
                    if (jComboBoxDepartamentos.getItemAt(i).toString().equals(departamento)) {
                        jComboBoxDepartamentos.setSelectedIndex(i);
                        break;
                    }
                }

                for (int i = 0; i < jComboBoxMunicipio.getItemCount(); i++) {
                    if (jComboBoxMunicipio.getItemAt(i).toString().equals(municipio)) {
                        jComboBoxMunicipio.setSelectedIndex(i);
                        break;
                    }
                }

                for (int i = 0; i < jComboBoxDistrito.getItemCount(); i++) {
                    if (jComboBoxDistrito.getItemAt(i).toString().equals(distrito)) {
                        jComboBoxDistrito.setSelectedIndex(i);
                        break;
                    }
                }
            });
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always1
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jComboBoxGiros = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        txtGetNombreComercial = new javax.swing.JTextField();
        jComboBoxDepartamentos = new javax.swing.JComboBox<>();
        txtGetNit = new javax.swing.JTextField();
        jComboBoxDistrito = new javax.swing.JComboBox<>();
        jComboBoxMunicipio = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtGetDireccion = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextFieldPropietario = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(951, 547));

        jPanel1.setBackground(new java.awt.Color(241, 241, 240));
        jPanel1.setLayout(null);

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Arial Narrow", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("NIT");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(720, 140, 24, 21);

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Arial Narrow", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Giro Comercial");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(620, 250, 104, 21);

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Arial Narrow", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Departamento");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(10, 420, 98, 21);

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("Arial Narrow", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Municipio");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(440, 410, 69, 21);

        jComboBoxGiros.setBackground(new java.awt.Color(255, 255, 255));
        jComboBoxGiros.setFont(new java.awt.Font("Arial Narrow", 1, 18)); // NOI18N
        jComboBoxGiros.setForeground(new java.awt.Color(0, 0, 0));
        jComboBoxGiros.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxGiros.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(9, 29, 54)));
        jPanel1.add(jComboBoxGiros);
        jComboBoxGiros.setBounds(770, 240, 230, 36);

        jButton1.setBackground(new java.awt.Color(0, 102, 102));
        jButton1.setFont(new java.awt.Font("Arial Narrow", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Aceptar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(740, 540, 113, 39);

        jLabel1.setBackground(new java.awt.Color(18, 56, 84));
        jLabel1.setFont(new java.awt.Font("Arial Narrow", 1, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("AGREGAR NUEVA EMPRESA");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(580, 20, 420, 31);

        jButton2.setBackground(new java.awt.Color(204, 0, 0));
        jButton2.setFont(new java.awt.Font("Arial Narrow", 1, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Cancelar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(890, 540, 113, 39);

        txtGetNombreComercial.setBackground(new java.awt.Color(255, 255, 255));
        txtGetNombreComercial.setFont(new java.awt.Font("Arial Narrow", 1, 18)); // NOI18N
        txtGetNombreComercial.setForeground(new java.awt.Color(0, 0, 0));
        txtGetNombreComercial.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtGetNombreComercial.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(9, 29, 54)));
        txtGetNombreComercial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGetNombreComercialActionPerformed(evt);
            }
        });
        jPanel1.add(txtGetNombreComercial);
        txtGetNombreComercial.setBounds(200, 130, 460, 37);

        jComboBoxDepartamentos.setBackground(new java.awt.Color(255, 255, 255));
        jComboBoxDepartamentos.setFont(new java.awt.Font("Arial Narrow", 1, 18)); // NOI18N
        jComboBoxDepartamentos.setForeground(new java.awt.Color(0, 0, 0));
        jComboBoxDepartamentos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxDepartamentos.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(9, 29, 54)));
        jComboBoxDepartamentos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxDepartamentosActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBoxDepartamentos);
        jComboBoxDepartamentos.setBounds(200, 410, 190, 36);

        txtGetNit.setBackground(new java.awt.Color(255, 255, 255));
        txtGetNit.setFont(new java.awt.Font("Arial Narrow", 1, 18)); // NOI18N
        txtGetNit.setForeground(new java.awt.Color(0, 0, 0));
        txtGetNit.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtGetNit.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(9, 29, 54)));
        txtGetNit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtGetNitKeyTyped(evt);
            }
        });
        jPanel1.add(txtGetNit);
        txtGetNit.setBounds(770, 130, 230, 37);

        jComboBoxDistrito.setBackground(new java.awt.Color(255, 255, 255));
        jComboBoxDistrito.setFont(new java.awt.Font("Arial Narrow", 1, 18)); // NOI18N
        jComboBoxDistrito.setForeground(new java.awt.Color(0, 0, 0));
        jComboBoxDistrito.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxDistrito.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(9, 29, 54)));
        jPanel1.add(jComboBoxDistrito);
        jComboBoxDistrito.setBounds(820, 400, 180, 40);

        jComboBoxMunicipio.setBackground(new java.awt.Color(255, 255, 255));
        jComboBoxMunicipio.setFont(new java.awt.Font("Arial Narrow", 1, 18)); // NOI18N
        jComboBoxMunicipio.setForeground(new java.awt.Color(0, 0, 0));
        jComboBoxMunicipio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxMunicipio.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(9, 29, 54)));
        jComboBoxMunicipio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxMunicipioActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBoxMunicipio);
        jComboBoxMunicipio.setBounds(540, 400, 180, 39);

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setFont(new java.awt.Font("Arial Narrow", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Distrito");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(750, 410, 52, 21);

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Arial Narrow", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Nombre Comercial");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(10, 140, 129, 21);

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setFont(new java.awt.Font("Arial Narrow", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Dirección");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(10, 330, 67, 21);

        txtGetDireccion.setBackground(new java.awt.Color(255, 255, 255));
        txtGetDireccion.setFont(new java.awt.Font("Arial Narrow", 1, 18)); // NOI18N
        txtGetDireccion.setForeground(new java.awt.Color(0, 0, 0));
        txtGetDireccion.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtGetDireccion.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(9, 29, 54)));
        txtGetDireccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGetDireccionActionPerformed(evt);
            }
        });
        jPanel1.add(txtGetDireccion);
        txtGetDireccion.setBounds(200, 330, 800, 37);

        jLabel9.setBackground(new java.awt.Color(255, 255, 255));
        jLabel9.setFont(new java.awt.Font("Arial Narrow", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("Propietario");
        jLabel9.setToolTipText("");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(10, 250, 78, 21);

        jTextFieldPropietario.setBackground(new java.awt.Color(255, 255, 255));
        jTextFieldPropietario.setFont(new java.awt.Font("Arial Narrow", 1, 18)); // NOI18N
        jTextFieldPropietario.setForeground(new java.awt.Color(0, 0, 0));
        jTextFieldPropietario.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldPropietario.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(9, 29, 54)));
        jPanel1.add(jTextFieldPropietario);
        jTextFieldPropietario.setBounds(200, 240, 390, 38);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1038, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 688, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        reloadPanel();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtGetNombreComercialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGetNombreComercialActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGetNombreComercialActionPerformed

    private void jComboBoxMunicipioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxMunicipioActionPerformed
        setjComboBoxGetDistrict(evt);
    }//GEN-LAST:event_jComboBoxMunicipioActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String nombreComercial = this.txtGetNombreComercial.getText().trim();
        String nit = this.txtGetNit.getText().trim();
        String giro = Objects.requireNonNull(jComboBoxGiros.getSelectedItem()).toString();
        String departamento = Objects.requireNonNull(jComboBoxDepartamentos.getSelectedItem()).toString();
        String municipio = Objects.requireNonNull(jComboBoxMunicipio.getSelectedItem()).toString();
        String distrito = Objects.requireNonNull(jComboBoxDistrito.getSelectedItem()).toString();
        String propietario = jTextFieldPropietario.getText().trim();

        if (nombreComercial.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Ingrese el nombre de la empresa", "Error", JOptionPane.ERROR_MESSAGE);
            txtGetNombreComercial.setText("");
            txtGetNombreComercial.requestFocus();
            return;
        }

        if (nit.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Ingrese el NIT de la empresa", "Error", JOptionPane.ERROR_MESSAGE);
            txtGetNit.setText("");
            txtGetNit.requestFocus();
            return;
        }

        if (!nit.matches("\\d{4}-\\d{6}-\\d{3}-\\d{1}")) {
            JOptionPane.showMessageDialog(null, "El formato del NIT es incorrecto. Debe seguir este formato: 1234-567890-123-4", "Error", JOptionPane.ERROR_MESSAGE);
            txtGetNit.setText("");
            txtGetNit.requestFocus();
            return;
        }
        
        if(jTextFieldPropietario.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(this, "Ingrese el propietario de la empresa", "Error", JOptionPane.ERROR_MESSAGE);
            jTextFieldPropietario.setText("");
            jTextFieldPropietario.requestFocus();
            return;
        }
        
        // No permitor numeros ni simbolos en el jTextFieldPropietario
        if(!jTextFieldPropietario.getText().matches("^[a-zA-ZñÑáéíóúÁÉÍÓÚ\\s]+$")){
            JOptionPane.showMessageDialog(this, "El propietario no puede contener números ni simbolos", "Error", JOptionPane.ERROR_MESSAGE);
            jTextFieldPropietario.setText("");
            jTextFieldPropietario.requestFocus();
            return;
        }

        if (giro.isEmpty() || giro.equals("Seleccionar giro comercial")) {
            JOptionPane.showMessageDialog(this, "Ingrese el giro comercial de la empresa", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (departamento.isEmpty() || departamento.equals("Seleccionar departamento")) {
            JOptionPane.showMessageDialog(this, "Ingrese el departamento donde se ubica la empresa", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (municipio.isEmpty() || municipio.equals("Seleccionar municipio")) {
            JOptionPane.showMessageDialog(this, "Ingrese el municipio donde se ubica la empresa", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (distrito.isEmpty() || distrito.equals("Seleccionar distrito")) {
            JOptionPane.showMessageDialog(this, "Ingrese el distrito donde se ubica la empresa", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int companyId = SelectData.getLastCompanyId();

        if(update)
            companyId = this.empresaId;
        
        int userId = this.idUser;
        
        System.out.println("Update?" + update);
        System.out.println("Nit" + nit);
        System.out.println("Company ID" + companyId);

        if(update){
            if (SelectData.ValidateNIT(nit, companyId)) {
                JOptionPane.showMessageDialog(this, "El NIT ingresado ya existe", "Error", JOptionPane.ERROR_MESSAGE);
                txtGetNit.setText("");
                txtGetNit.requestFocus();
                return;
            }
        }else{
            if (SelectData.ValidateNIT(nit)) {
                JOptionPane.showMessageDialog(this, "El NIT ingresado ya existe", "Error", JOptionPane.ERROR_MESSAGE);
                txtGetNit.setText("");
                txtGetNit.requestFocus();
                return;
            }
        }

        Empresa empresa = new Empresa(companyId, 
                nombreComercial, 
                nit, 
                Integer.parseInt(giro.split(" - ")[0]), 
                txtGetDireccion.getText(), 
                Integer.parseInt(distrito.split(" - ")[0]), 
                userId,
                propietario);

        if (update){
            if (UpdateData.updateCompanyInformation(empresa, empresaId)) {
                JOptionPane.showMessageDialog(this, 
                        "Empresa actualizada exitosamente", 
                        "Éxito", 
                        JOptionPane.INFORMATION_MESSAGE
                );
                reloadPanel();
            } else {
                JOptionPane.showMessageDialog(this, 
                        "Error al actualizar la empresa", 
                        "Error",
                        JOptionPane.ERROR_MESSAGE
                );
            }
        }else{
            if (InsertData.saveCompanyInformation(empresa)) {
                JOptionPane.showMessageDialog(this, 
                        "Empresa agregada exitosamente", 
                        "Éxito", 
                        JOptionPane.INFORMATION_MESSAGE
                );
                reloadPanel();
            } else {
                JOptionPane.showMessageDialog(this, 
                        "Error al guardar la empresa", 
                        "Error", 
                        JOptionPane.ERROR_MESSAGE
                );
            }
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtGetDireccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGetDireccionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGetDireccionActionPerformed

    private void txtGetNitKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtGetNitKeyTyped
        txtGetNit.addKeyListener(new KeyAdapter() {

            final int MaxLength = 17;

            // Limitar la cantidad de caracteres a 17
            @Override
            public void keyTyped(KeyEvent e) {
                if (txtGetNit.getText().length() == MaxLength) {
                    e.consume();
                }
            }

            final int[] validKeys = {
                    KeyEvent.VK_BACK_SPACE, KeyEvent.VK_TAB,
                    KeyEvent.VK_0, KeyEvent.VK_1, KeyEvent.VK_2,
                    KeyEvent.VK_3, KeyEvent.VK_4, KeyEvent.VK_5,
                    KeyEvent.VK_6, KeyEvent.VK_7, KeyEvent.VK_8,
                    KeyEvent.VK_9
            };

            @Override
            public void keyPressed(KeyEvent e) {
                boolean isValidKey = false;
                for (int validKey : validKeys) {
                    if (e.getKeyCode() == validKey) {
                        isValidKey = true;
                        break;
                    }
                }

                if (!isValidKey) {
                    JOptionPane.showMessageDialog(null, "Solo se permiten números", "Error", JOptionPane.ERROR_MESSAGE);
                    e.consume();
                    return;
                }

                // Colocar guion automático cada 4, 11 y 15 dígitos
                if (e.getKeyCode() != KeyEvent.VK_BACK_SPACE && e.getKeyCode() != KeyEvent.VK_TAB) {
                    if (txtGetNit.getText().length() == 4 || txtGetNit.getText().length() == 11 || txtGetNit.getText().length() == 15) {
                        txtGetNit.setText(txtGetNit.getText() + "-");
                    }
                }
            }
        });
    }//GEN-LAST:event_txtGetNitKeyTyped

    private void jComboBoxDepartamentosActionPerformed(java.awt.event.ActionEvent evt) {
        if (jComboBoxDepartamentos.getSelectedIndex() <= 0) {
            return;
        }
        Department selectedDepartment = (Department) jComboBoxDepartamentos.getSelectedItem();
        assert selectedDepartment != null;
        String department = selectedDepartment.toString();
        if (department == null || department.equals("Seleccionar departamento")) {
            System.out.println("No hay departamento seleccionado. Esperando interacción del usuario...");
            return;
        }
        jComboBoxMunicipio.removeAllItems();
        jComboBoxDistrito.removeAllItems();
        jComboBoxMunicipio.addItem("Seleccionar municipio");
        jComboBoxDistrito.addItem("Seleccionar distrito");

        LoadStaticData.getMunicipalities(String.valueOf(selectedDepartment.getId())).forEach(municipio -> jComboBoxMunicipio.addItem(municipio));
    }

    public void setjComboBoxGetDistrict(java.awt.event.ActionEvent evt) {
        if (jComboBoxMunicipio.getSelectedIndex() <= 0) {
            return;
        }
        Municipio selectedMunicipality = (Municipio) jComboBoxMunicipio.getSelectedItem();
        if (selectedMunicipality == null) {
            System.out.println("No hay municipio seleccionado. Esperando interacción del usuario...");
            return;
        }
        jComboBoxDistrito.removeAllItems();
        jComboBoxDistrito.addItem("Seleccionar distrito");

        LoadStaticData.getDistricts(String.valueOf(selectedMunicipality.getId())).forEach(district -> jComboBoxDistrito.addItem(district));
    }

    private void loadDepartments() {
        jComboBoxDepartamentos.removeAllItems();
        jComboBoxDepartamentos.addItem("Seleccionar departamento");
        LoadStaticData.getDepartamentos().forEach(department -> jComboBoxDepartamentos.addItem(department));
    }

    private void loadGiros() {
        jComboBoxGiros.removeAllItems();
        jComboBoxGiros.addItem("Seleccionar giro comercial");
        LoadStaticData.getGiros().forEach((giro) -> jComboBoxGiros.addItem(giro));
    }
    
    void reloadPanel(){
        jPanel1.removeAll();
        EmpresasR er = new EmpresasR(user, empresaSelected, idUser );
        er.setSize(jPanel1.getSize()); // Establecer el tamaño igual al tamaño del contenedor
        er.loadCompanies();
        jPanel1.setLayout(new BorderLayout()); // Usar un BorderLayout
        jPanel1.add(er, BorderLayout.CENTER); // Agregar el componente en el centro
        jPanel1.revalidate();
        jPanel1.repaint();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<Object> jComboBoxDepartamentos;
    private javax.swing.JComboBox<Object> jComboBoxDistrito;
    private javax.swing.JComboBox<Object> jComboBoxGiros;
    private javax.swing.JComboBox<Object> jComboBoxMunicipio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextFieldPropietario;
    private javax.swing.JTextField txtGetDireccion;
    private javax.swing.JTextField txtGetNit;
    private javax.swing.JTextField txtGetNombreComercial;
    // End of variables declaration//GEN-END:variables
}
